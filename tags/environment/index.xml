<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Environment on Erica On The Way</title>
    <link>http://erica-zhou.github.io/tags/environment/</link>
    <description>Recent content in Environment on Erica On The Way</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright (c) 2008 - 2015, Erica Zhou; all rights reserved.</copyright>
    <lastBuildDate>Sun, 16 Aug 2015 23:04:24 +0800</lastBuildDate>
    <atom:link href="http://erica-zhou.github.io/tags/environment/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>利用 git hook 搭建自动编译部署测试环境</title>
      <link>http://erica-zhou.github.io/posts/put_up_dev_env/</link>
      <pubDate>Sun, 16 Aug 2015 23:04:24 +0800</pubDate>
      
      <guid>http://erica-zhou.github.io/posts/put_up_dev_env/</guid>
      <description>

&lt;h3 id=&#34;说明:62a450c8c89780770128cbd5f887c201&#34;&gt;说明：&lt;/h3&gt;

&lt;p&gt;利用 docker，git 搭建自动编译部署测试环境
&lt;strong&gt;步骤：&lt;/strong&gt;
1. 在 &lt;code&gt;dev_server&lt;/code&gt;上 搭建测试环境
2. 创建在 &lt;code&gt;ci_server&lt;/code&gt;代码远端仓库 &lt;code&gt;test_repo&lt;/code&gt;
3. 在远端仓库中添加 post-recieve hook
3. 在开发机上本地仓库上新添加一个远程仓库指向的远端仓库&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;
&lt;code&gt;dev_server&lt;/code&gt;和 &lt;code&gt;ci_server&lt;/code&gt;都是docker container&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用说明：&lt;/strong&gt;
每次 commit 后
1. 在测试服务器上自动编译
2. 在测试服务器上自动部署&lt;/p&gt;

&lt;h2 id=&#34;步骤说明:62a450c8c89780770128cbd5f887c201&#34;&gt;步骤说明&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;创建&lt;code&gt;dev_server&lt;/code&gt;搭建测试环境：&lt;/li&gt;
&lt;li&gt;新建一个 container将程序能正常运行 的环境全部部署好，然后将该 container 保存为image，&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建相关的 Dockfile
创建 Dockfile 并不是一个必须的步骤，但是创建测试环境的 Dockfile，并保存，能让开发人员在换了测试服务器（非&lt;code&gt;dev_server&lt;/code&gt;）后能快速的搭建测试环境而不需要重新搭建&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;新建一个&lt;code&gt;ci_server&lt;/code&gt; container&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;新运行一个 container 名为&lt;code&gt;ci_server&lt;/code&gt;，需要将&lt;code&gt;ci_server&lt;/code&gt; 的端口22 映射到宿主机&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装运行ssh&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置好程序编译环境&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装git&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;创建远端仓库：在&lt;code&gt;test_repo&lt;/code&gt;目录下执行 &lt;code&gt;git init --bare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将开发机上的需要测试代码分支推到远端仓库后，在 &lt;code&gt;test_src&lt;/code&gt;目录下执行&lt;code&gt;git clone $test_repo&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置自动编译部署脚本，在远端仓库中添加 post-recieve hook，hook 包括3部分&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;pull 刚刚提交的代码&lt;/li&gt;
&lt;li&gt;编译&lt;/li&gt;
&lt;li&gt;部署测试环境
&lt;strong&gt;注意：&lt;/strong&gt;
在 hook 中，GIT_DIR 的值被设置为&lt;code&gt;.&lt;/code&gt;,因此在使用 git 命令前可以删除这个变量，或者将它设置为你需要的的值&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;参考资料:62a450c8c89780770128cbd5f887c201&#34;&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tuicool.com/articles/3QRB7jU&#34;&gt;在测试服务器上建立代码的远程仓库&amp;amp;代码仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://git-scm.com/docs/githooks&#34;&gt;添加 post_recieve hook&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;container 中安装 ssh：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$ yum install openssh-server 
	$ echo root:sshpass | chpasswd
	$ sed &#39;s@session\s*required\s*pam_loginuid.so@session optional 	pam_loginuid.so@g&#39; -i /etc/pam.d/sshd
	$ /etc/init.d/sshd start
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将&lt;code&gt;ci_server&lt;/code&gt;的ssh端口（22）映射的宿主机时，一般无法映射到相同的22端口上，因此开发机的本地仓库添加&lt;code&gt;ci_server&lt;/code&gt;远端仓库时，需要指定端口号，方法如下： &lt;code&gt;ssh://git@github.com:22/asdf/asdf.git&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>